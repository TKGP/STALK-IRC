--| Game interface for STALK-IRC
--| Last modified: Feb 28, '15
--| By: TKGP

local UPDATEINTERVAL	= 1000						-- Time between file checks in milliseconds
local INPATH			= getFS():update_path( "$fs_root$", "" ).."\\STALK-IRC_input.txt"
local OUTPATH			= getFS():update_path( "$fs_root$", "" ).."\\STALK-IRC_output.txt"
local INPUTREGEX		= "([^/]+)/([^/]+)/(.+)"	-- Regular expression for parsing input
local ssVer				= script_server_object_version()
local game				= ( ssVer >= 12 and "CoP" ) or ( ssVer >= 8 and "CS" ) or
							( ssVer == 7 and bind_actor ~= nil and "LA" ) or ( ssVer <= 7 and bind_stalker ~= nil and "SoC" )
local lastUpdate		= 0
local spawned			= false						-- Extra logic on first update
local disable			= false						-- In case of errors, shut down everything
local timeout			= 5000						-- Default duration of news messages
local chatKey			= DIK_keys.DIK_APOSTROPHE	-- Default key to trigger chat box UI
local muhAtmospheres	= false						-- Disables IRC underground
local atmosphericLevels								-- List of interior levels, filled out below
local icons											-- List of icons per game, filled out below

function onUpdate()
	if disable then return end
	if time_global() < lastUpdate + UPDATEINTERVAL then return end
	lastUpdate = time_global()
	
	-- Could just be a callback from net_spawn but less hooks is more better
	if not spawned then
		spawned = true
		if game == "SoC" then
			sendOutput( "1/_/_" )
		else
			local output = io.open( OUTPATH, "w" )
			if not output then
				giveNews( "Information", "Failed to open output file. Try running the game as Administrator.", icons[ game ].info )
				disable = true
				return
			end
			output:write( "1/_/_\r\n" )
			output:close()
		end
	end
	
	local fileText = ""
	if game == "SoC" then
		local config = ini_file( "misc\\stalk_irc.ltx" )
		for lineNumber = 0, config:line_count( "messages" ) do
			local _, _, line = config:r_line( "messages", lineNumber, "", "" )
			fileText = fileText..line:sub( 2, #line - 1 ).."\n"
		end
		local fileSystem = getFS()
		local path = fileSystem:update_path( "$game_config$", "" )
		fileSystem:file_copy( path.."misc\\stalk_irc_clear.ltx", path.."misc\\stalk_irc.ltx" )
	else
		local success = false
		while not success do
			local input
			while not input do
				input = io.open( INPATH, "r" )
			end
			fileText = input:read( "*a" )
			input:close()
			input = io.open( INPATH, "w" )
			if input then
				input:close()
				success = true
			end
		end
	end
	for line in fileText:gmatch( "[^\n]+" ) do
		local action, arg1, arg2 = line:match( INPUTREGEX )
		if action == "1" then
			if arg1 == "timeout" then
				timeout = tonumber( arg2 )
			elseif arg1 == "chatkey" then
				chatKey = DIK_keys[ arg2 ]
			elseif arg1 == "atmospheres" then
				muhAtmospheres = arg2 == "True"
			end
		elseif action == "2" and not ( muhAtmospheres and atmosphericLevels[ level.name() ] ) then
			-- Consistent random portraits per name; yeah, I know this is pretty bullshit but randomseed in Lua 5.1 is all kinds of janked up
			local oldRandom = math.random()
			local seed = 0
			for _, charValue in ipairs( { arg1:byte( 1, #arg1 ) } ) do
				seed = seed + charValue
			end
			seed = seed / #arg1
			seed = math.floor( ( seed - math.floor( seed ) ) * 10000 )
			math.randomseed( seed )
			local icon = arg1 == "Information" and icons[ game ].info or icons[ game ].random[ math.random( #icons[ game ].random ) ]
			math.randomseed( oldRandom )
			giveNews( arg1:gsub( "_", " " ), arg2, icon )
		end
	end
end

function onDeath( killedBy )
	if disable or ( muhAtmospheres and atmosphericLevels[ level.name() ] ) then return end
	local section = killedBy:section()
	local config = system_ini()
	local class = config:section_exist( section ) and config:line_exist( section, "class" ) and config:r_string( section, "class" ) or section
	sendOutput( "3/"..class.."/"..level.name() )
end

function onKeypress( keyCode )
	if disable then return end
	if level.present() and keyCode == chatKey then
		get_console():execute( "main_menu off" )
		if muhAtmospheres and atmosphericLevels[ level.name() ] then
			giveNews( "Information", "Unable to connect to the network.", icons[ game ].info )
			return
		end
		if game == "CoP" then
			chatInputWindow():ShowDialog(true)
		else
			level.start_stop_menu( chatInputWindow(), true )
		end
	end
end

function giveNews( title, message, icon )
	if game == "SoC" or game == "LA" then
		db.actor:give_game_news( title.."\\n"..message, "ui\\ui_iconsTotal", icon, 0, timeout )
	else
		db.actor:give_game_news( title, message, icon, 0, timeout )
	end
end

function sendOutput( message )
	if game == "SoC" then
		local console = get_console()
		--RIP in peace capital letters
		console:execute( "load ~#stalk-irc "..message )
		console:execute( "flush" )
	else
		local output
		while not output do
			output = io.open( OUTPATH, "a" )
		end
		output:write( message.."\n" )
		output:close()
	end
end

--------------------------------------------------
		
class "chatInputWindow" ( CUIScriptWnd )

function chatInputWindow:__init( owner ) super()
	self.owner = owner
	self:InitControls()
	self:InitCallBacks()
end

function chatInputWindow:__finalize()
end

function chatInputWindow:InitControls()
	if game == "SoC" or game == "LA" then
		self:Init( 0, 0, 1024, 768 )
	else
		self:SetWndRect( Frect():set( 0, 0, 1024, 768 ) )
	end
	local xml = CScriptXmlInit()
	xml:ParseFile( "ui_chatinput.xml" )
	
	self.editBox = xml:InitEditBox( "edit_box", self )
	self:Register( xml:Init3tButton( "button_send", self ), "button_send" )
	self:Register( xml:Init3tButton( "button_close", self ), "button_close" )
end

function chatInputWindow:InitCallBacks()
	self:AddCallback( "button_send",	ui_events.BUTTON_CLICKED,	self.onSend,	self)
	self:AddCallback( "button_close",	ui_events.BUTTON_CLICKED,	self.onCancel,	self)
end

function chatInputWindow:OnKeyboard( dik, keyboard_action )
	CUIScriptWnd.OnKeyboard( self, dik, keyboard_action )
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_RETURN or dik == DIK_keys.DIK_NUMPADENTER then
			self:onSend()		
		elseif dik == DIK_keys.DIK_ESCAPE then
			self:onCancel()
		end
	end
	return true
end

function chatInputWindow:onSend()
	local chatInput = self.editBox:GetText()
	if chatInput and chatInput ~= "" then
		self.editBox:SetText( "" )
		self.editBox:Show(true)
		sendOutput( "2/_/"..chatInput )
	end
end

function chatInputWindow:onCancel()
	if game == "CoP" then
		self:HideDialog()
	else
		self:GetHolder():start_stop_menu( self, true )
	end
end

--------------------------------------------------

atmosphericLevels = {
	l03u_agr_underground	= true,
	l04u_labx18				= true,
	l08u_brainlab			= true,
	l10u_bunker				= true,
	l12u_sarcofag			= true,
	l12u_control_monolith	= true,
	agroprom_underground	= true,
	hospital				= true,
	jupiter_underground		= true,
	labx8					= true,
	}

icons = {
	SoC = {
		info = Frect():set( 83, 94, 83, 47 ),
		random = {
			Frect():set( 249, 705,	83, 47 ),
			Frect():set( 332, 0,	83, 47 ),
			Frect():set( 332, 47,	83, 47 ),
			Frect():set( 332, 94,	83, 47 ),
			Frect():set( 332, 141,	83, 47 ),
			Frect():set( 332, 188,	83, 47 ),
			Frect():set( 332, 235,	83, 47 ),
			Frect():set( 332, 282,	83, 47 ),
			Frect():set( 332, 329,	83, 47 ),
			Frect():set( 332, 376,	83, 47 ),
			Frect():set( 332, 423,	83, 47 ),
			Frect():set( 332, 470,	83, 47 ),
			Frect():set( 332, 517,	83, 47 ),
			Frect():set( 332, 564,	83, 47 ),
			Frect():set( 332, 611,	83, 47 ),
			Frect():set( 332, 658,	83, 47 ),
			Frect():set( 332, 705,	83, 47 ),
			Frect():set( 332, 752,	83, 47 ),
			Frect():set( 332, 799,	83, 47 ),
			Frect():set( 332, 846,	83, 47 ),
			Frect():set( 332, 893,	83, 47 ),
			Frect():set( 332, 940,	83, 47 ),
			Frect():set( 415, 0,	83, 47 ),
			Frect():set( 415, 47,	83, 47 ),
			Frect():set( 415, 94,	83, 47 ),
			Frect():set( 415, 141,	83, 47 ),
			Frect():set( 415, 188,	83, 47 ),
			Frect():set( 415, 235,	83, 47 ),
			Frect():set( 415, 282,	83, 47 ),
			Frect():set( 415, 329,	83, 47 ),
			Frect():set( 415, 376,	83, 47 ),
			Frect():set( 415, 423,	83, 47 ),
			Frect():set( 415, 470,	83, 47 ),
			Frect():set( 415, 517,	83, 47 ),
			Frect():set( 415, 564,	83, 47 ),
			Frect():set( 415, 611,	83, 47 ),
			Frect():set( 415, 658,	83, 47 ),
			Frect():set( 415, 705,	83, 47 ),
			Frect():set( 415, 752,	83, 47 ),
			Frect():set( 415, 799,	83, 47 ),
			Frect():set( 498, 0,	83, 47 ),
			}
		},
	CS = {
		info = "ui_iconsTotal_find_upgrade",
		random = {
			"ui_iconsTotal_yan_scientist_job",
			"ui_iconsNpc_soldier_bandana_6",
			"ui_iconsNpc_stalker_neytral_rukzak_4",
			"ui_iconsNpc_soldier_beret",
			"ui_iconsNpc_stalker_neytral_balon_6",
			"ui_iconsNpc_stalker_bar_security",
			"ui_iconsNpc_barman",
			"ui_iconsNpc_stalker_do_balon_1",
			"ui_iconsNpc_stalker_do_balon_5",
			"ui_iconsNpc_stalker_do_balon_3",
			"ui_iconsNpc_stalker_do_komandir",
			"ui_iconsNpc_ucheniy_2",
			"ui_iconsNpc_stalker_ki_head_5",
			"ui_iconsNpc_stalker_bandit_borov",
			"ui_iconsNpc_stalker_do_balon_7",
			"ui_iconsNpc_stalker_do_balon_6",
			"ui_iconsNpc_stalker_neytral_balon_4",
			"ui_iconsNpc_soldier_beret_1",
			"ui_iconsNpc_green_stalker_8",
			"ui_iconsNpc_green_stalker_1",
			"ui_iconsNpc_trader",
			"ui_iconsNpc_stalker_neytral_balon_1",
			"ui_iconsNpc_stalker_neytral_balon_5",
			"ui_iconsNpc_stalker_do_balon_4",
			"ui_iconsNpc_green_stalker_11",
			"ui_iconsNpc_stalker_neytral_hood_4",
			"ui_iconsNpc_stalker_sv_balon_10",
			"ui_iconsNpc_stalker_sv_leader",
			"ui_iconsNpc_stalker_sv_max",
			"ui_iconsNpc_stalker_sv_cook",
			"ui_iconsNpc_stalker_sv_balon_1",
			"ui_iconsNpc_stalker_ki_informator",
			"ui_iconsNpc_soldier_beret_2",
			"ui_iconsNpc_soldier_beret_3",
			"ui_iconsNpc_soldier_beret_5",
			"ui_iconsNpc_stalker_neytral_rukzak_1",
			"ui_iconsNpc_stalker_neytral_rukzak_3",
			"ui_iconsNpc_stalker_prizrak",
			"ui_iconsNpc_green_stalker_7",
			"ui_iconsNpc_stalker_sv_rukzak_1",
			"ui_iconsNpc_ecolog",
			}
		},
	CoP = {
		info = "ui_iconsTotal_tutorial_help_wounded",
		},
	}
icons.CoP.random = icons.CS.random
icons.LA = icons.SoC